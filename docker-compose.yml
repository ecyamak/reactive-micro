version: '3.7'
services:
  config-service:
    container_name: config-service
    build:
      context: config-service
      dockerfile: Dockerfile
    image: config-service
    ports:
      - 8888:8888
    expose:
      - 8888
    networks:
      - service-network
    healthcheck:
      test: "curl --fail --silent http://config-service:8888/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
  discovery-service:
    container_name: discovery-service
    build:
      context: discovery-service
      dockerfile: Dockerfile
    image: discovery-service
    ports:
      - 8761:8761
    expose:
      - 8761
    networks:
      - service-network
    healthcheck:
      test: "curl --fail --silent http://discovery-service:8761/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    depends_on:
      config-service:
        condition: service_healthy
  gateway-service:
    container_name: gateway-service
    build:
      context: gateway-service
      dockerfile: Dockerfile
    image: gateway-service
    ports:
      - 8080:8080
    expose:
      - 8080
    networks:
      - service-network
    depends_on:
      discovery-service:
        condition: service_healthy
  auth-service:
    container_name: auth-service
    build:
      context: auth-service
      dockerfile: Dockerfile
    image: auth-service
    ports:
      - 8079:8079
    expose:
      - 8079
    networks:
      - service-network
    depends_on:
      discovery-service:
        condition: service_healthy
      auth-mongodb:
        condition: service_started
  zookeeper:
    container_name: zookeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  first-service:
    container_name: first-service
    build:
      context: first-service
      dockerfile: Dockerfile
    image: first-service
    ports:
      - 8081:8081
    expose:
      - 8081
    networks:
      - service-network
    depends_on:
      discovery-service:
        condition: service_healthy
      first-mongodb:
        condition: service_started
      kafka:
        condition: service_started
  auth-mongodb:
    container_name: auth-mongodb
    image: mongo:latest
    ports:
      - 27000:27017
    expose:
      - 27000
    networks:
      - service-network
    volumes:
      - mongodb-auth:/data/db
  first-mongodb:
    container_name: first-mongodb
    image: mongo:latest
    ports:
      - 27001:27017
    expose:
      - 27001
    networks:
      - service-network
    volumes:
      - mongodb-first:/data/db
volumes:
  mongodb-auth:
  mongodb-first:
networks:
  service-network:
    driver: bridge